## ------------------------------------------------------------------------
library(SUMMER)
library(ggplot2)
library(gridExtra)
 


## ------------------------------------------------------------------------
library(readstata13)
filename <- "../data/KEBR71DT/KEBR71FL.DTA"
births <- read.dta13(filename, generate.factors = TRUE)   

library(rgdal)
mapfilename0 <- "../data/shapefiles/sdr_subnational_boundaries.shp"
geo0 <- readOGR(mapfilename0, verbose = FALSE)
mapfilename <- "../data/shapefiles/sdr_subnational_boundaries2.shp"
geo <- readOGR(mapfilename, verbose = FALSE)
Amat <- getAmat(geo, geo$REGNAME)


## ------------------------------------------------------------------------
loc <- readOGR("../data//KEGE71FL/KEGE71FL.shp", verbose = FALSE)
loc.dat <- data.frame(cluster = loc$DHSCLUST, long = loc$LONGNUM, lat = loc$LATNUM)
gps <- mapPoints(loc.dat, geo = geo, long = "long", lat = "lat", names = c("REGNAME"))
colnames(gps)[4] <- "region"
gps0 <- mapPoints(loc.dat, geo = geo0, long = "long", lat = "lat", names = c("REGNAME"))
colnames(gps0)[4] <- "province"
gps <- merge(gps, gps0[, c("cluster", "province")])
sum(is.na(gps$region))


## ------------------------------------------------------------------------
unknown_cluster <- gps$cluster[which(is.na(gps$region))]
gps <- gps[gps$cluster %in% unknown_cluster == FALSE, ]
births <- births[births$v001 %in% unknown_cluster == FALSE, ]
births <- merge(births, gps[, c("cluster", "region", "province")], by.x = "v001", by.y = "cluster", all.x = TRUE)
births$v024 <- births$region


## ------------------------------------------------------------------------
dat <- getBirths(data = births, strata = c("v023"),  year.cut = seq(1985, 2020, by = 1)) 
dat <- dat[,c("v001", "v002",  "v024","time","age","v005","strata","died")]
colnames(dat) <- c("clustid", "id", "region","time","age","weights","strata","died")
years <- levels(dat$time)
head(dat)


## -----------------------------------------------------------
dat_infant = getBirths(data = births, month.cut = c(1, 12), strata=c("v023"))


## -----------------------------------------------------------
direct0 <- getDirect(births = dat, years = years, regionVar = "region",
  timeVar = "time", clusterVar = "~clustid + id", ageVar = "age", weightsVar = "weights", geo.recode = NULL)


## ------------------------------------------------------------------------
data(KenData)
adj <- KenData$HIV2014.yearly
colnames(adj) <- c("years", "province", "ratio")
head(adj)


## ------------------------------------------------------------------------
matched <- match(direct0$region, gps$region)
direct0$province <- as.character(gps[matched, "province"])
direct0$province[direct0$region == "All"] <- "All"
direct0$logit.lower <- logit(direct0$lower)
direct0$logit.upper <- logit(direct0$upper)
direct <- getAdjusted(data = direct0, ratio = adj, time = "years", region = "province", adj = "ratio", logit.lower = "logit.lower", logit.upper = "logit.upper", lower = "lower", upper = "upper")


## ------------------------------------------------------------------------
fit0 <- fitINLA(data = direct, geo = NULL, Amat = NULL, year_label = years, year_range = c(1985, 2019), rw = 2, m=1)


## ------------------------------------------------------------------------
out0 <- getSmoothed(fit0, year_range = c(1985, 2019), year_label = years)


## ------------------------------------------------------------------------
random.time <- getDiag(fit0, field = "time", year_label = years)
plot(random.time, is.subnational=FALSE) + facet_grid(~label) + ggtitle("Compare temporal random effects: National Model") + ylab("Random Effects")


## ------------------------------------------------------------------------
UN <- KenData$IGME2019
ratio <- out0$median[1:34] / UN$mean[34:67]
adj.benchmark <- data.frame(years = out0$years[1:34], ratio = ratio)
direct <- getAdjusted(data = direct, ratio = adj.benchmark, time = "years", region = "province", adj = "ratio", logit.lower = "logit.lower", logit.upper = "logit.upper", lower = "lower", upper = "upper")


## ------------------------------------------------------------------------
fit0.benchmark <- fitINLA(data = direct, geo = NULL, Amat = NULL, year_label = years, year_range = c(1985, 2019), rw = 2, m =1)
out0.benchmark <- getSmoothed(fit0.benchmark, year_range = c(1985, 2019), year_label = years)

g1 <- plot(out0, year_label = years, year_med = as.numeric(years), is.subnational=FALSE,  data.add = UN, option.add = list(point = "mean"), label.add = "UN", color.add = "orange") + ggtitle("National Smoothing Model: Before Benchmarking") + ylim(c(0, 0.14))
g2 <- plot(out0.benchmark, year_label = years, year_med = as.numeric(years), is.subnational=FALSE,  data.add = UN, option.add = list(point = "mean"), label.add = "UN", color.add = "orange") + ggtitle("National Smoothing Model: After Benchmarking") + ylim(c(0, 0.14))
grid.arrange(g1, g2, ncol = 2)


## ------------------------------------------------------------------------
fit0.sub <- fitINLA(data = direct, geo = geo, Amat = Amat, year_label = years,
                year_range = c(1985, 2019), rw = 2, type.st = 4, m = 1)


## ------------------------------------------------------------------------
out0.sub <- getSmoothed(fit0.sub, Amat = Amat, year_range = c(1985, 2019), year_label = years)


## ------------------------------------------------------------------------
plot(out0.sub, is.subnational=FALSE,  data.add = direct, option.add = list(point = "mean", by = "survey"), color.add = "orange", per1000=TRUE) + facet_wrap(~region, ncol = 7) + theme(legend.position = "none") + scale_color_manual(values = rep("gray20", 
    47))



## ------------------------------------------------------------------------
mapPlot(data = subset(out0.sub, years %in% c(1985, 1990, 1995, 2000, 2005, 2010, 2015)), geo = geo, variables=c("years"), values = c("median"), by.data = "region", by.geo = "REGNAME", is.long = TRUE, border = "gray80", size = 0.2, ncol = 4, per1000 = TRUE, legend.label = "U5MR")


## ------------------------------------------------------------------------
breaks.hatch <- seq(0, 900, len = 10)
hatchPlot(data = subset(out0.sub, years %in% c(1985, 1990, 1995, 2000, 2005, 2010, 2015)), geo = geo, variables=c("years"), values = c("median"), by.data = "region", by.geo = "REGNAME", lower = "lower", upper = "upper", is.long=TRUE, ncol = 4, hatch = "gray50", per1000 = TRUE, breaks.CI = breaks.hatch) 


## ------------------------------------------------------------------------
hatchPlot(data = subset(direct, years %in% c(1985, 1990, 1995, 2000, 2005, 2010, 2014)), geo = geo, variables=c("years"), values = c("mean"), by.data = "region", by.geo = "REGNAME", lower = "lower", upper = "upper", is.long=TRUE, ncol = 4, hatch = "gray50", per1000 = TRUE, breaks.CI = breaks.hatch) 


## ------------------------------------------------------------------------
random.time <- getDiag(fit0.sub, field = "time", year_label = years)
random.space <- getDiag(fit0.sub, field = "space", Amat = Amat)
random.spacetime <- getDiag(fit0.sub, field = "spacetime", year_label = years, Amat = Amat)


## ------------------------------------------------------------------------
plot(random.time, is.subnational=FALSE) + facet_wrap(~label) + ggtitle("Compare temporal random effects") + ylab("Random Effects")

## ------------------------------------------------------------------------
mapPlot(random.space, geo = geo, by.data = "region", by.geo = "REGNAME", variables = "label", values = c("median"), ncol = 2, is.long = TRUE) 


## ------------------------------------------------------------------------
plot(random.spacetime, is.subnational=FALSE) + facet_wrap(~region, ncol = 7) + ylab("Random Effects")+ ggtitle("Compare space-time interaction random effects")


## ------------------------------------------------------------------------
dat <- getBirths(data = births, strata = c("v023"), year.cut = seq(1985, 2020, by = 1)) 
dat <- dat[,c("v001", "time","age",  "died", "v025", "v024")]
colnames(dat) <- c("cluster", "years","age",  "Y", "strata", "province")
outcome <- getCounts(data = dat, 
	 variables = "Y", 
	 by = c("age", "strata", "cluster", "years"), 
	 ignore = list(years = c(2015:2019)))
head(outcome)


## ------------------------------------------------------------------------
outcome <- merge(outcome, gps[, c("cluster", "region", "province")], by = "cluster", all.x = TRUE)


## ------------------------------------------------------------------------
adj <-  KenData$HIV2014.yearly
colnames(adj) <- c("years", "province", "ratio")


## ------------------------------------------------------------------------
outcome_national <- outcome
outcome_national$strata <- paste(outcome$region, outcome$strata)


## ----------------------------------------------------------
fit1 <- fitINLA2(data = outcome_national, family = "betabinomial", Amat = NULL, geo = NULL, year_label = 1985:2019, bias.adj = adj, bias.adj.by = c("years", "province"), age.rw.group = c(1, 2, 3,3, 3, 3),verbose = FALSE)


## ------------------------------------------------------------------------
Prop<- KenData$UrbanProp
Prop_national <- data.frame(matrix(NA, 1,  dim(Amat)[1] * 2))
colnames(Prop_national) <- c(paste(Prop$region, "urban"), paste(Prop$region, "rural"))
Prop_national[1, ] <- c(Prop$urban * Prop$population, Prop$rural * Prop$population)
Prop_national[1, ] <- Prop_national[1, ] / sum(Prop_national[1, ])



## -----------------------------------------------------------
out1 <- getSmoothed(inla_mod = fit1, year_label = years, Amat = Amat, nsim = 1000, weight.strata = Prop_national)


## ------------------------------------------------------------------------
data(KenData)
UN <- KenData$IGME2019
ratio <- out1$overall$median[1:34] / UN$mean[34:67]
adj.benchmark <- expand.grid(years = 2014:1985, province = unique(adj$province))
adj.benchmark <- merge(adj.benchmark, adj,  all.x=TRUE)
adj.benchmark$ratio[is.na(adj.benchmark$ratio)] <- 1
adj.benchmark$ratio <- adj.benchmark$ratio * ratio[adj.benchmark$years-1984]


## ---- fig.width = 9, fig.height = 4--------------------------------------
g1 <- ggplot(data = subset(adj, years >= 1985), aes(x = years, y = ratio, group = province, color=province)) + geom_line() + ylim(range(adj.benchmark$ratio)) + ggtitle("HIV adjustment ratios")
g2 <- ggplot(data = adj.benchmark, aes(x = years, y = ratio, group = province, color=province)) + geom_line() + ggtitle("Benchmarking adjustment ratios")
grid.arrange(g1, g2, ncol = 2)


## -----------------------------------------------------------
fit1.benchmark <- fitINLA2(data = outcome_national, family = "betabinomial", Amat = NULL, geo = NULL, year_label = 1985:2019, bias.adj = adj.benchmark, bias.adj.by = c("years", "province"), age.rw.group = c(1, 2, 3,3, 3, 3),verbose = FALSE)
out1.benchmark <- getSmoothed(inla_mod = fit1.benchmark, year_label = years, Amat = NULL, nsim = 1000, weight.strata = Prop_national)


## ------------------------------------------------------------------------
g1 <- plot(out1$overall, year_label = years, year_med = 1985:2019, is.subnational=FALSE, plot.CI = TRUE, alpha.CI = 0.2, per1000 = TRUE,  data.add = UN, option.add = list(point = "mean"), label.add = "UN", color.add = "orange", dodge.width = 0.1) + ggtitle("National Binomial Model: Before Benchmarking") + ylim(25, 150) 
g2 <- plot(out1.benchmark$overall, year_label = years, year_med = 1985:2019, is.subnational=FALSE, plot.CI = TRUE, alpha.CI = 0.2, per1000 = TRUE,  data.add = UN, option.add = list(point = "mean"), label.add = "UN", color.add = "orange", dodge.width = 0.1) + ggtitle("National Binomial Model: After Benchmarking") + ylim(25, 150)
grid.arrange(g1, g2, ncol = 2)



## -----------------------------------------------------------
fit1.sub <- fitINLA2(data = outcome, family = "betabinomial", Amat = Amat, geo = geo, year_label = 1985:2019, type.st = 4, bias.adj = adj.benchmark, bias.adj.by = c("years", "province"), age.rw.group = c(1, 2, 3,3, 3, 3),verbose = FALSE)
out1.sub <- getSmoothed(inla_mod = fit1.sub, year_label = years, Amat = Amat, nsim = 1000, weight.strata = KenData$UrbanProp, num.threads = 12)


## ------------------------------------------------------------------------
plot(out1.sub$overall, year_label = years, year_med = 1985:2019, is.subnational=TRUE, plot.CI = FALSE, per1000 = TRUE) + ggtitle("Subnational Binomial Model") + theme(legend.position = "bottom") + ylim(c(0, 400))



## ------------------------------------------------------------------------
plot(out1.sub$overall, year_label = years, year_med = 1985:2019, is.subnational=TRUE, plot.CI = TRUE, per1000 = TRUE) + ggtitle("Subnational Binomial Model") + facet_wrap(~region, ncol = 7) + theme(legend.position = "none") + scale_color_manual(values = rep("gray20", 47))



## ------------------------------------------------------------------------
mapPlot(data = subset(out1.sub$overall, years %in% c(1985, 1990, 1995, 2000, 2005, 2010, 2015)), geo = geo, variables=c("years"), values = c("median"), by.data = "region", by.geo = "REGNAME", is.long = TRUE, border = "gray80", size = 0.2, ncol = 4, per1000 = TRUE, legend.label = "U5MR")


## ------------------------------------------------------------------------
hatchPlot(data =  subset(out1.sub$overall, years %in% c(1985, 1990, 1995, 2000, 2005, 2010, 2015)), geo = geo, variables=c("years"), values = c("median"), by.data = "region", by.geo = "REGNAME", lower = "lower", upper = "upper", is.long=TRUE, size = 0.5, ncol = 4, per1000 = TRUE, legend.label = "U5MR", breaks.CI = breaks.hatch, hatch = "gray50")


## ------------------------------------------------------------------------
random.space <- getDiag(fit1.sub, field = "space", Amat = Amat)
mapPlot(random.space, geo = geo, by.data = "region", by.geo = "REGNAME", variables = "label", values = c("median"), ncol = 2, is.long = TRUE) 


## ------------------------------------------------------------------------
random.time <- getDiag(fit1.sub, field = "time", year_label = years)
random.time[is.na(random.time$group), "group"] <- "IID shocks"
random.time <- subset(random.time, group %in% c("0", "1-11", "12-23", "IID shocks"))
random.time[random.time$group == "12-23", "group"] <- "12-60"
plot(random.time, is.subnational=FALSE) + facet_wrap(~group, ncol = 4) + ggtitle("Compare Random Walk Effects for Different Age Groups") + ylab("Random Effects")



## ------------------------------------------------------------------------
random.spacetime <- getDiag(fit1.sub, field = "spacetime", year_label = years, Amat = Amat)
plot(random.spacetime, is.subnational=FALSE) + facet_wrap(~region, ncol = 7) + ylab("Random Effects")+ ggtitle("Compare space-time interaction random effects")



## ------------------------------------------------------------------------
results0 <- out0.sub[, c("region", "years", "median", "upper", "lower")]
results1 <- out1.sub$overall[, c("region", "years", "median", "upper", "lower")]
results2 <- direct[, c("region", "years", "mean", "upper", "lower")]
results0$type <- "Smooth_Direct"
results1$type <- "Binomial"
results2$type <- "Direct"
colnames(results0)[3] <- colnames(results1)[3] <- colnames(results2)[3] <- "Est"
results <- rbind(results0, results1, results2)
results$type <- factor(results$type, levels = c("Direct", "Smooth_Direct", "Binomial"))
results <- results[results$region != "All", ]


## ------------------------------------------------------------------------
pos <- position_dodge(width = 0.2)
ggplot(results, aes(x = years, y = Est, color = type, ymin = lower, ymax = upper)) + geom_point(position=pos, alpha = 0.8, size = 0.5) + geom_errorbar(position=pos, size = 0.5, alpha = 0.8) + facet_wrap(~region, ncol = 7) + theme_bw() + theme(legend.position = "bottom") + scale_colour_manual(values=c("steelblue", "orange", "red")) 



## ------------------------------------------------------------------------
g <- NULL
for(i in 1:7){
	t <- c(1985, 1990, 1995, 2000, 2005, 2010, 2014)[i]
	selectyear <- subset(results, type == "Binomial" & years == t)
	ordered <- selectyear[order(selectyear$Est), "region"]
	results$region <- factor(results$region, levels = ordered)
	pos <- position_dodge(width = 0.8)
	g[[i]] <- ggplot(subset(results, years == t), aes(y = logit(Est), x = region, color = type, ymin = logit(lower), ymax = logit(upper))) + geom_point(position=pos,  size = 0.5) + geom_errorbar(position=pos, size = 0.8, width = 0, alpha = 0.8) + facet_grid(~years) + theme_bw() + theme(legend.position = "bottom") + ylab("Logit(U5MR)") + coord_flip() + scale_colour_manual(values=c("steelblue", "orange", "red")) 
}
grid.arrange(grobs = g, ncol = 4)


## ------------------------------------------------------------------------
library(tidyr)
range <- range(c(0, results$Est), na.rm = TRUE)
results.wide <- spread(results[, c(1,2,3,6)], type, Est) 
results.wide$Direct[is.na(results.wide$Direct)] <- 0

g1 <- ggplot(results.wide, aes(x = Direct, y = Smooth_Direct, color = region)) + geom_point(alpha = 0.5) + geom_abline(intercept = 0, slope = 1, color = "red") + xlim(range)+ ylim(range) + theme(legend.position = "none")
g2 <- ggplot(results.wide, aes(x = Smooth_Direct, y = Binomial, color = region)) + geom_point(alpha = 0.5) + geom_abline(intercept = 0, slope = 1, color = "red") + xlim(range)+ ylim(range) + theme(legend.position = "none")
grid.arrange(g1, g2, ncol = 2)

