return(k)
}
chart_co<-sae("Combined2_10", nepal, "C", "Coexistence")
chart_co
sae<-function(var, nepal, grade,name){
bin.res1 <- smoothArea(as.formula(paste0(var,"~ 1")),
domain = ~dist_code,
design = svydt,
adj.mat = mat,
transform = "logit",
pc.u = 1,
pc.alpha = 0.01,
pc.u.phi = 0.5,
pc.alpha.phi = 2/3)
a<-data.frame(bin.res1$bym2.model.est)
a$domain<-as.numeric(a$domain)
a$mean<-a$mean*100
nepal2<-nepal |>
left_join(a,by = c("dist_code"="domain"))
k<-ggplot() +
geom_sf(data = nepal2, aes(fill=mean))+
scale_fill_gradient(low = "yellow", high = "red",limits = c(0, 100))+
xlab("Longitude") + ylab("Latitude")+
annotation_scale(location = "bl", width_hint = 0.3) +
labs(title = paste0(grade, "Small Area Estimation of ", name ))+
annotation_north_arrow(location = "tr", which_north = "true",
pad_x = unit(0.75, "in"), pad_y = unit(0.5, "in"),
style = north_arrow_fancy_orienteering) +
coord_sf(xlim = c(79.9, 88.2), ylim = c(26, 30.5))+
theme_bw()
return(k)
}
chart_un<-sae("under_nut_binary", nepal,"D.", "Undernutrition")
chart_ane<-sae("anemia01", nepal, "E. ", "Anemia")
chart_co<-sae("Combined2_10", nepal, "F. ", "Coexistence")
chart_stunt<-sae("stunting01", nepal,"A. ", "Stunting")
chart_waste<-sae("wasting01", nepal, "B. ", "Wasting")
chart_uw<-sae("underwt01", nepal, "C. ", "Underweight")
library(patchwork)
chart_stunt+chart_waste+chart_uw+chart_un+chart_ane+chart_co+plot_layout(ncol=3, byrow = T)
library(patchwork)
chart_stunt+chart_waste+chart_uw+chart_un+chart_ane+chart_co+plot_layout(ncol=3, byrow = T, guides = "collect")
sae<-function(var, nepal, grade){
bin.res1 <- smoothArea(as.formula(paste0(var,"~ 1")),
domain = ~dist_code,
design = svydt,
adj.mat = mat,
transform = "logit",
pc.u = 1,
pc.alpha = 0.01,
pc.u.phi = 0.5,
pc.alpha.phi = 2/3)
a<-data.frame(bin.res1$bym2.model.est)
a$domain<-as.numeric(a$domain)
a$mean<-a$mean*100
nepal2<-nepal |>
left_join(a,by = c("dist_code"="domain"))
k<-ggplot() +
geom_sf(data = nepal2, aes(fill=mean))+
scale_fill_gradient(low = "yellow", high = "red",limits = c(5, 75))+
annotation_scale(location = "bl", width_hint = 0.3) +
labs(title = grade)+
annotation_north_arrow(location = "tr", which_north = "true",
pad_x = unit(0.75, "in"), pad_y = unit(0.75, "in"),
style = north_arrow_fancy_orienteering) +
coord_sf(xlim = c(79.9, 88.2), ylim = c(26, 30.5))+
theme_bw()
return(k)
}
sae<-function(var, nepal, grade){
bin.res1 <- smoothArea(as.formula(paste0(var,"~ 1")),
domain = ~dist_code,
design = svydt,
adj.mat = mat,
transform = "logit",
pc.u = 1,
pc.alpha = 0.01,
pc.u.phi = 0.5,
pc.alpha.phi = 2/3)
a<-data.frame(bin.res1$bym2.model.est)
a$domain<-as.numeric(a$domain)
a$mean<-a$mean*100
nepal2<-nepal |>
left_join(a,by = c("dist_code"="domain"))
k<-ggplot() +
geom_sf(data = nepal2, aes(fill=mean))+
scale_fill_gradient(low = "yellow", high = "red",limits = c(5, 75))+
annotation_scale(location = "bl", width_hint = 0.3) +
labs(title = grade)+
annotation_north_arrow(location = "tr", which_north = "true",
pad_x = unit(0.75, "in"), pad_y = unit(0.75, "in"),
style = north_arrow_fancy_orienteering) +
coord_sf(xlim = c(79.9, 88.2), ylim = c(26, 30.5))+
theme_bw()+
theme(title = element_text(size=11))
return(k)
}
chart_un<-sae("under_nut_binary", nepal,"D")
chart_un<-sae("under_nut_binary", nepal,"D")
chart_ane<-sae("anemia01", nepal, "E")
chart_co<-sae("Combined2_10", nepal, "F")
chart_stunt<-sae("stunting01", nepal,"A")
chart_waste<-sae("wasting01", nepal, "B")
chart_uw<-sae("underwt01", nepal, "C")
library(patchwork)
chart_stunt+chart_waste+chart_uw+chart_un+chart_ane+chart_co+plot_layout(ncol=3, byrow = T)
library(patchwork)
chart_stunt+chart_waste+chart_uw+chart_un+chart_ane+chart_co+plot_layout(ncol=3, byrow = T, guides = "collect")
chart_un+chart_ane+chart_co+plot_layout(ncol=3, byrow = T, guides = "collect")
chart_un+chart_ane+chart_co+plot_layout(ncol=1, byrow = T, guides = "collect")
sae<-function(var, nepal, grade){
bin.res1 <- smoothArea(as.formula(paste0(var,"~ 1")),
domain = ~dist_code,
design = svydt,
adj.mat = mat,
transform = "logit",
pc.u = 1,
pc.alpha = 0.01,
pc.u.phi = 0.5,
pc.alpha.phi = 2/3)
a<-data.frame(bin.res1$bym2.model.est)
a$domain<-as.numeric(a$domain)
a$mean<-a$mean*100
nepal2<-nepal |>
left_join(a,by = c("dist_code"="domain"))
k<-ggplot() +
geom_sf(data = nepal2, aes(fill=mean))+
scale_fill_gradient(low = "yellow", high = "red",limits = c(5, 75))+
annotation_scale(location = "bl", width_hint = 0.3) +
labs(title = grade)+
annotation_north_arrow(location = "tr", which_north = "true",
pad_x = unit(0.75, "in"), pad_y = unit(0.25, "in"),
style = north_arrow_fancy_orienteering) +
coord_sf(xlim = c(79.9, 88.2), ylim = c(26, 30.5))+
theme_bw()+
theme(title = element_text(size=11))
return(k)
}
chart_ane<-sae("anemia01", nepal, "E")
chart_ane
chart_un<-sae("under_nut_binary", nepal,"B")
chart_ane<-sae("anemia01", nepal, "A")
chart_co<-sae("Combined2_10", nepal, "C")
chart_un+chart_ane+chart_co+plot_layout(ncol=3, byrow = T, guides = "collect")
chart_un+chart_ane+chart_co+plot_layout(ncol=1, byrow = T, guides = "collect")
chart_un+chart_ane+chart_co+plot_layout(ncol=1, byrow = T)
# load libraries
library(tidyverse)
library(gtsummary)
library(survey)
dt <- readRDS("Datasets/Processed data/Cleaned_datasetV1.RDS")
# load libraries
library(tidyverse)
library(gtsummary)
library(survey)
dt <- readRDS("Datasets/Processed data/Cleaned_datasetV1.RDS")
dt <-dt |> filter(Year==2022) |> droplevels()
dt$motheredu<-ifelse(dt$Mother_education2=="no education", 1, ifelse(dt$Mother_education2=="lower basic education (1-5)"|dt$Mother_education2=="upper basic education (6-8)", 2, ifelse(dt$Mother_education2=="lower secondary (9-10)"|dt$Mother_education2=="upper secondary (11-12)", 3, ifelse(dt$Mother_education2=="more than secondary (13+)", 3,  NA))))
dt$motheredu<-factor(dt$motheredu, levels = c(1:3), labels=c("No education", "basic ", "Secondary and Higher"))
dt$fatheredu<-ifelse(dt$v701=="no education", 1, ifelse(dt$v701=="basic", 2, ifelse(dt$v701=="secondary"|dt$v701=="higher", 3, NA)))
dt$fatheredu<-factor(dt$fatheredu, levels = c(1:3), labels=c("No education", "basic ", "Secondary and Higher"))
dt$Anemia<-factor(dt$Anemia, levels = c(0,1), labels=c("No", "Yes"))
# create survey design
svydt<-svydesign(ids = ~ids, weights = ~Sampling_wt, data=dt)
dt2<- dt |>
select(ids, Sampling_wt, under_nut_binary, anemia01, Combined2_10, District)
library(sf)
library(ggplot2)
library(ggspatial)
library(SUMMER)
# PULL MAP DATA AND ndhs DATA
map<-read_sf("Datasets/Raw data/hermes_NPL_new_wgs(1)/hermes_NPL_new_wgs_2.shp")
library(sf)
library(ggplot2)
library(ggspatial)
library(SUMMER)
# PULL MAP DATA AND ndhs DATA
map<-read_sf("Datasets/Raw data/hermes_NPL_new_wgs(1)/hermes_NPL_new_wgs_2.shp")
nepal<-st_transform(map, crs="+proj=longlat +datum=WGS84 +no_defs")
# mdhs DATA
# load libraries
library(tidyverse)
library(gtsummary)
library(survey)
dt <- readRDS("Datasets/Processed data/Cleaned_datasetV1.RDS")
dt <-dt |> filter(Year==2022) |> droplevels()
dt$motheredu<-ifelse(dt$Mother_education2=="no education", 1, ifelse(dt$Mother_education2=="lower basic education (1-5)"|dt$Mother_education2=="upper basic education (6-8)", 2, ifelse(dt$Mother_education2=="lower secondary (9-10)"|dt$Mother_education2=="upper secondary (11-12)", 3, ifelse(dt$Mother_education2=="more than secondary (13+)", 3,  NA))))
dt$motheredu<-factor(dt$motheredu, levels = c(1:3), labels=c("No education", "basic ", "Secondary and Higher"))
dt$fatheredu<-ifelse(dt$v701=="no education", 1, ifelse(dt$v701=="basic", 2, ifelse(dt$v701=="secondary"|dt$v701=="higher", 3, NA)))
dt$fatheredu<-factor(dt$fatheredu, levels = c(1:3), labels=c("No education", "basic ", "Secondary and Higher"))
dt$Anemia<-factor(dt$Anemia, levels = c(0,1), labels=c("No", "Yes"))
# create survey design
svydt<-svydesign(ids = ~ids, weights = ~Sampling_wt, data=dt)
nepal$DISTRICT<-tolower(nepal$DISTRICT)
nepal$DISTRICT[nepal$DISTRICT=="kabhrepalanchok"]<-"kavrepalanchok"
nepal$DISTRICT[nepal$DISTRICT=="parasi"]<-"nawalparasi west"
nepal$DISTRICT[nepal$DISTRICT=="nawalpur"]<-"nawalparasi east"
nepal$DISTRICT[nepal$DISTRICT=="makawanpur"]<-"makwanpur"
nepal$dist2<-factor(nepal$DISTRICT, levels=c("bhojpur", "dhankuta", "ilam", "jhapa", "khotang", "morang","okhaldhunga", "panchthar", "sankhuwasabha", "solukhumbu", "sunsari", "taplejung", "terhathum", "udayapur", "bara", "dhanusha", "mahottari", "parsa", "rautahat", "saptari", "sarlahi", "siraha", "bhaktapur", "chitawan", "dhading", "dolakha", "kavrepalanchok", "kathmandu","lalitpur", "makwanpur", "nuwakot", "ramechhap", "rasuwa", "sindhuli","sindhupalchok", "baglung", "gorkha", "kaski", "lamjung", "manang","mustang", "myagdi", "nawalparasi east", "parbat", "syangja","tanahu", "arghakhanchi", "banke", "bardiya", "dang", "gulmi","kapilbastu", "palpa", "nawalparasi west", "pyuthan", "rolpa","rukum east", "rupandehi", "dailekh", "dolpa", "humla", "jajarkot","jumla", "kalikot", "mugu", "rukum west", "salyan", "surkhet","achham", "baitadi", "bajhang", "bajura", "dadeldhura", "darchula", "doti", "kailali", "kanchanpur"),labels=c("bhojpur", "dhankuta", "ilam", "jhapa", "khotang", "morang","okhaldhunga", "panchthar", "sankhuwasabha", "solukhumbu", "sunsari", "taplejung", "terhathum", "udayapur", "bara", "dhanusha", "mahottari", "parsa", "rautahat", "saptari", "sarlahi", "siraha", "bhaktapur", "chitawan", "dhading", "dolakha", "kavrepalanchok", "kathmandu","lalitpur", "makwanpur", "nuwakot", "ramechhap", "rasuwa", "sindhuli","sindhupalchok", "baglung", "gorkha", "kaski", "lamjung", "manang","mustang", "myagdi", "nawalparasi east", "parbat", "syangja","tanahu", "arghakhanchi", "banke", "bardiya", "dang", "gulmi","kapilbastu", "palpa", "nawalparasi west", "pyuthan", "rolpa","rukum east", "rupandehi", "dailekh", "dolpa", "humla", "jajarkot","jumla", "kalikot", "mugu", "rukum west", "salyan", "surkhet","achham", "baitadi", "bajhang", "bajura", "dadeldhura", "darchula", "doti", "kailali", "kanchanpur"))
nepal$dist_code<-as.numeric(nepal$dist2)
dt$dist2<-factor(dt$District, levels =c("bhojpur", "dhankuta", "ilam", "jhapa", "khotang", "morang","okhaldhunga", "panchthar", "sankhuwasabha", "solukhumbu", "sunsari", "taplejung", "terhathum", "udayapur", "bara", "dhanusha", "mahottari", "parsa", "rautahat", "saptari", "sarlahi", "siraha", "bhaktapur", "chitawan", "dhading", "dolakha", "kavrepalanchok", "kathmandu","lalitpur", "makwanpur", "nuwakot", "ramechhap", "rasuwa", "sindhuli","sindhupalchok", "baglung", "gorkha", "kaski", "lamjung", "manang","mustang", "myagdi", "nawalparasi east", "parbat", "syangja","tanahu", "arghakhanchi", "banke", "bardiya", "dang", "gulmi","kapilbastu", "palpa", "nawalparasi west", "pyuthan", "rolpa","rukum east", "rupandehi", "dailekh", "dolpa", "humla", "jajarkot","jumla", "kalikot", "mugu", "rukum west", "salyan", "surkhet","achham", "baitadi", "bajhang", "bajura", "dadeldhura", "darchula", "doti", "kailali", "kanchanpur"),labels=c("bhojpur", "dhankuta", "ilam", "jhapa", "khotang", "morang","okhaldhunga", "panchthar", "sankhuwasabha", "solukhumbu", "sunsari", "taplejung", "terhathum", "udayapur", "bara", "dhanusha", "mahottari", "parsa", "rautahat", "saptari", "sarlahi", "siraha", "bhaktapur", "chitawan", "dhading", "dolakha", "kavrepalanchok", "kathmandu","lalitpur", "makwanpur", "nuwakot", "ramechhap", "rasuwa", "sindhuli","sindhupalchok", "baglung", "gorkha", "kaski", "lamjung", "manang","mustang", "myagdi", "nawalparasi east", "parbat", "syangja","tanahu", "arghakhanchi", "banke", "bardiya", "dang", "gulmi","kapilbastu", "palpa", "nawalparasi west", "pyuthan", "rolpa","rukum east", "rupandehi", "dailekh", "dolpa", "humla", "jajarkot","jumla", "kalikot", "mugu", "rukum west", "salyan", "surkhet","achham", "baitadi", "bajhang", "bajura", "dadeldhura", "darchula", "doti", "kailali", "kanchanpur") )
dt$dist_code<-as.numeric(dt$dist2)
dt$anemia01<-ifelse(dt$Anemia=="No", 0, 1)
dt$Combined2_10<-ifelse(dt$Combined2_1=="Coexistence", 1,0)
dt$stunting01<-ifelse(dt$nt_ch_stunt=="Yes", 1,0)
dt$wasting01<-ifelse(dt$nt_ch_wast=="Yes", 1,0)
dt$underwt01<-ifelse(dt$nt_ch_underwt=="Yes", 1,0)
dt2<- dt |>
select(ids, Sampling_wt, under_nut_binary, anemia01, Combined2_10, District)
saveRDS(dt2, "NDHS_dt2.RDS")
library(sf)
library(ggplot2)
library(ggspatial)
library(SUMMER)
# PULL MAP DATA AND ndhs DATA
map<-read_sf("Datasets/Raw data/hermes_NPL_new_wgs(1)/hermes_NPL_new_wgs_2.shp")
library(sf)
library(ggplot2)
library(ggspatial)
library(SUMMER)
# PULL MAP DATA AND ndhs DATA
map<-read_sf("Datasets/Raw data/hermes_NPL_new_wgs(1)/hermes_NPL_new_wgs_2.shp")
nepal<-st_transform(map, crs="+proj=longlat +datum=WGS84 +no_defs")
# mdhs DATA
# load libraries
library(tidyverse)
library(gtsummary)
library(survey)
dt <- readRDS("Datasets/Processed data/Cleaned_datasetV1.RDS")
library(spdep)
mat<-getAmat(geo = nepal, names = nepal$dist_code)
sae<-function(var, nepal, grade, name, col=c("yellow", "red")){
bin.res1 <- smoothArea(as.formula(paste0(var,"~ 1")),
domain = ~dist_code,
design = svydt,
adj.mat = mat,
transform = "logit",
pc.u = 1,
pc.alpha = 0.01,
pc.u.phi = 0.5,
pc.alpha.phi = 2/3)
a<-data.frame(bin.res1$bym2.model.est)
a$domain<-as.numeric(a$domain)
a$median<-a$median*100
nepal2<-nepal |>
left_join(a,by = c("dist_code"="domain"))
k<-ggplot() +
geom_sf(data = nepal2, aes(fill=median))+
geom_sf_text(data = nepal2, aes(label=OBJECTID), size=2)+
scale_fill_gradient(low = col[1], high = col[2])+
annotation_scale(location = "bl", width_hint = 0.3) +
labs(title = paste0(grade, ". Small Area Estimation of ", name))+
xlab("Longitude") + ylab("Latitude")+labs(fill="Prevalence")+
annotation_north_arrow(location = "tr", which_north = "true",
pad_x = unit(0.75, "in"), pad_y = unit(0.5, "in"),
style = north_arrow_fancy_orienteering) +
coord_sf(xlim = c(79.9, 88.2), ylim = c(26, 30.5))+
theme_bw()+
theme(title = element_text(size=11))
return(k)
}
chart_un<-sae("under_nut_binary", nepal,"A", "Undernutrition", col=c("white", "#1F78B4"))
chart_un<-sae("under_nut_binary", nepal,"A", "Undernutrition", col=c("white", "#1F78B4"))
nepal<-st_transform(map, crs="+proj=longlat +datum=WGS84 +no_defs")
# mdhs DATA
# load libraries
library(tidyverse)
library(gtsummary)
library(survey)
dt <- readRDS("Datasets/Processed data/Cleaned_datasetV1.RDS")
dt <- readRDS("Datasets/Processed data/Cleaned_datasetV1.RDS")
dt <-dt |> filter(Year==2022) |> droplevels()
dt$motheredu<-ifelse(dt$Mother_education2=="no education", 1, ifelse(dt$Mother_education2=="lower basic education (1-5)"|dt$Mother_education2=="upper basic education (6-8)", 2, ifelse(dt$Mother_education2=="lower secondary (9-10)"|dt$Mother_education2=="upper secondary (11-12)", 3, ifelse(dt$Mother_education2=="more than secondary (13+)", 3,  NA))))
dt$motheredu<-factor(dt$motheredu, levels = c(1:3), labels=c("No education", "basic ", "Secondary and Higher"))
dt$fatheredu<-ifelse(dt$v701=="no education", 1, ifelse(dt$v701=="basic", 2, ifelse(dt$v701=="secondary"|dt$v701=="higher", 3, NA)))
dt$fatheredu<-factor(dt$fatheredu, levels = c(1:3), labels=c("No education", "basic ", "Secondary and Higher"))
dt$Anemia<-factor(dt$Anemia, levels = c(0,1), labels=c("No", "Yes"))
# create survey design
svydt<-svydesign(ids = ~ids, weights = ~Sampling_wt, data=dt)
nepal$DISTRICT<-tolower(nepal$DISTRICT)
nepal$DISTRICT[nepal$DISTRICT=="kabhrepalanchok"]<-"kavrepalanchok"
nepal$DISTRICT[nepal$DISTRICT=="parasi"]<-"nawalparasi west"
nepal$DISTRICT[nepal$DISTRICT=="nawalpur"]<-"nawalparasi east"
nepal$DISTRICT[nepal$DISTRICT=="makawanpur"]<-"makwanpur"
nepal$dist2<-factor(nepal$DISTRICT, levels=c("bhojpur", "dhankuta", "ilam", "jhapa", "khotang", "morang","okhaldhunga", "panchthar", "sankhuwasabha", "solukhumbu", "sunsari", "taplejung", "terhathum", "udayapur", "bara", "dhanusha", "mahottari", "parsa", "rautahat", "saptari", "sarlahi", "siraha", "bhaktapur", "chitawan", "dhading", "dolakha", "kavrepalanchok", "kathmandu","lalitpur", "makwanpur", "nuwakot", "ramechhap", "rasuwa", "sindhuli","sindhupalchok", "baglung", "gorkha", "kaski", "lamjung", "manang","mustang", "myagdi", "nawalparasi east", "parbat", "syangja","tanahu", "arghakhanchi", "banke", "bardiya", "dang", "gulmi","kapilbastu", "palpa", "nawalparasi west", "pyuthan", "rolpa","rukum east", "rupandehi", "dailekh", "dolpa", "humla", "jajarkot","jumla", "kalikot", "mugu", "rukum west", "salyan", "surkhet","achham", "baitadi", "bajhang", "bajura", "dadeldhura", "darchula", "doti", "kailali", "kanchanpur"),labels=c("bhojpur", "dhankuta", "ilam", "jhapa", "khotang", "morang","okhaldhunga", "panchthar", "sankhuwasabha", "solukhumbu", "sunsari", "taplejung", "terhathum", "udayapur", "bara", "dhanusha", "mahottari", "parsa", "rautahat", "saptari", "sarlahi", "siraha", "bhaktapur", "chitawan", "dhading", "dolakha", "kavrepalanchok", "kathmandu","lalitpur", "makwanpur", "nuwakot", "ramechhap", "rasuwa", "sindhuli","sindhupalchok", "baglung", "gorkha", "kaski", "lamjung", "manang","mustang", "myagdi", "nawalparasi east", "parbat", "syangja","tanahu", "arghakhanchi", "banke", "bardiya", "dang", "gulmi","kapilbastu", "palpa", "nawalparasi west", "pyuthan", "rolpa","rukum east", "rupandehi", "dailekh", "dolpa", "humla", "jajarkot","jumla", "kalikot", "mugu", "rukum west", "salyan", "surkhet","achham", "baitadi", "bajhang", "bajura", "dadeldhura", "darchula", "doti", "kailali", "kanchanpur"))
nepal$dist_code<-as.numeric(nepal$dist2)
dt$dist2<-factor(dt$District, levels =c("bhojpur", "dhankuta", "ilam", "jhapa", "khotang", "morang","okhaldhunga", "panchthar", "sankhuwasabha", "solukhumbu", "sunsari", "taplejung", "terhathum", "udayapur", "bara", "dhanusha", "mahottari", "parsa", "rautahat", "saptari", "sarlahi", "siraha", "bhaktapur", "chitawan", "dhading", "dolakha", "kavrepalanchok", "kathmandu","lalitpur", "makwanpur", "nuwakot", "ramechhap", "rasuwa", "sindhuli","sindhupalchok", "baglung", "gorkha", "kaski", "lamjung", "manang","mustang", "myagdi", "nawalparasi east", "parbat", "syangja","tanahu", "arghakhanchi", "banke", "bardiya", "dang", "gulmi","kapilbastu", "palpa", "nawalparasi west", "pyuthan", "rolpa","rukum east", "rupandehi", "dailekh", "dolpa", "humla", "jajarkot","jumla", "kalikot", "mugu", "rukum west", "salyan", "surkhet","achham", "baitadi", "bajhang", "bajura", "dadeldhura", "darchula", "doti", "kailali", "kanchanpur"),labels=c("bhojpur", "dhankuta", "ilam", "jhapa", "khotang", "morang","okhaldhunga", "panchthar", "sankhuwasabha", "solukhumbu", "sunsari", "taplejung", "terhathum", "udayapur", "bara", "dhanusha", "mahottari", "parsa", "rautahat", "saptari", "sarlahi", "siraha", "bhaktapur", "chitawan", "dhading", "dolakha", "kavrepalanchok", "kathmandu","lalitpur", "makwanpur", "nuwakot", "ramechhap", "rasuwa", "sindhuli","sindhupalchok", "baglung", "gorkha", "kaski", "lamjung", "manang","mustang", "myagdi", "nawalparasi east", "parbat", "syangja","tanahu", "arghakhanchi", "banke", "bardiya", "dang", "gulmi","kapilbastu", "palpa", "nawalparasi west", "pyuthan", "rolpa","rukum east", "rupandehi", "dailekh", "dolpa", "humla", "jajarkot","jumla", "kalikot", "mugu", "rukum west", "salyan", "surkhet","achham", "baitadi", "bajhang", "bajura", "dadeldhura", "darchula", "doti", "kailali", "kanchanpur") )
dt$dist_code<-as.numeric(dt$dist2)
dt$anemia01<-ifelse(dt$Anemia=="No", 0, 1)
dt$Combined2_10<-ifelse(dt$Combined2_1=="Coexistence", 1,0)
dt$stunting01<-ifelse(dt$nt_ch_stunt=="Yes", 1,0)
dt$wasting01<-ifelse(dt$nt_ch_wast=="Yes", 1,0)
dt$underwt01<-ifelse(dt$nt_ch_underwt=="Yes", 1,0)
dt2<- dt |>
select(ids, Sampling_wt, under_nut_binary, anemia01, Combined2_10, District)
saveRDS(dt2, "NDHS_dt2.RDS")
# create survey design
svydt<-svydesign(ids = ~ids, weights = ~Sampling_wt, data=dt)
library(spdep)
mat<-getAmat(geo = nepal, names = nepal$dist_code)
sae<-function(var, nepal, grade, name, col=c("yellow", "red")){
bin.res1 <- smoothArea(as.formula(paste0(var,"~ 1")),
domain = ~dist_code,
design = svydt,
adj.mat = mat,
transform = "logit",
pc.u = 1,
pc.alpha = 0.01,
pc.u.phi = 0.5,
pc.alpha.phi = 2/3)
a<-data.frame(bin.res1$bym2.model.est)
a$domain<-as.numeric(a$domain)
a$median<-a$median*100
nepal2<-nepal |>
left_join(a,by = c("dist_code"="domain"))
k<-ggplot() +
geom_sf(data = nepal2, aes(fill=median))+
geom_sf_text(data = nepal2, aes(label=OBJECTID), size=2)+
scale_fill_gradient(low = col[1], high = col[2])+
annotation_scale(location = "bl", width_hint = 0.3) +
labs(title = paste0(grade, ". Small Area Estimation of ", name))+
xlab("Longitude") + ylab("Latitude")+labs(fill="Prevalence")+
annotation_north_arrow(location = "tr", which_north = "true",
pad_x = unit(0.75, "in"), pad_y = unit(0.5, "in"),
style = north_arrow_fancy_orienteering) +
coord_sf(xlim = c(79.9, 88.2), ylim = c(26, 30.5))+
theme_bw()+
theme(title = element_text(size=11))
return(k)
}
chart_un<-sae("under_nut_binary", nepal,"A", "Undernutrition", col=c("white", "#1F78B4"))
chart_ane<-sae("anemia01", nepal, "B", "Anemia", col=c("white", "red1"))
chart_co<-sae("Combined2_10", nepal, "C", "Coexistence of Undernutrition and Anemia",col=c("white", "gold2"))
chart_stunt<-sae("stunting01", nepal,"A")
chart_co
# load libraries
library(tidyverse)
library(gtsummary)
library(survey)
dt <- readRDS("Datasets/Processed data/Cleaned_datasetV1.RDS")
dt <- readRDS("Datasets/Processed data/Cleaned_datasetV1.RDS")
# load libraries
library(tidyverse)
library(gtsummary)
library(survey)
dt <- readRDS("Datasets/Processed data/Cleaned_datasetV1.RDS")
table(dt$age2)
svydt |>
tbl_strata(
strata = age2,
.tbl_fun =
~ .x |>
tbl_svysummary(include = c("stunting2","wasting2","underwt2","Anemia2", "stunt_ane2", "wast_ane2", "underwt_ane2","all_under_nutrition","under_nut_multinom","undernut_number_ane_comb_multi", "Combined2_1" ),percent = "column",
digits = all_categorical()~c(1), statistic = all_categorical()~"{p}") |>
bold_labels() |>
add_ci(style_fun = list(all_categorical() ~ purrr::partial(style_percent, digits = 1),
all_continuous()~purrr::partial(style_number, digits=1)))
)
dt$health_program
svydt |>
tbl_strata(
strata = age2,
.tbl_fun =
~ .x |>
tbl_svysummary(include = c("Wealth_quintile","Mother_education", "maternal_nut", "housedecision","health_program" ),percent = "row", by= Combined2_1,
digits = all_categorical()~c(1), statistic = all_categorical()~"{p}") |>
bold_labels()
)
svydt |>
tbl_svysummary(include = c("stunting2","wasting2","underwt2","Anemia2", "stunt_ane2", "wast_ane2", "underwt_ane2","all_under_nutrition","under_nut_multinom","undernut_number_ane_comb_multi", "Combined2_1" ),percent = "column",
digits = all_categorical()~c(1), statistic = all_categorical()~"{p}") |>
bold_labels() |>
add_ci(style_fun = list(all_categorical() ~ purrr::partial(style_percent, digits = 1),
all_continuous()~purrr::partial(style_number, digits=1)))
svydt |>
tbl_svysummary(include = c("stunting2","wasting2","underwt2","Anemia2", "stunt_ane2", "wast_ane2", "underwt_ane2","all_under_nutrition","under_nut_multinom","undernut_number_ane_comb_multi", "Combined2_1" ),percent = "column", by= age2,
digits = all_categorical()~c(1), statistic = all_categorical()~"{p}") |>
bold_labels() |>
add_ci(style_fun = list(all_categorical() ~ purrr::partial(style_percent, digits = 1),
all_continuous()~purrr::partial(style_number, digits=1)))
rm(list=ls())
# load functions and packages
source("Script/1_1_Functions.R")
rm(list=ls())
# load functions and packages
source("Script/1_1_Functions.R")
# use of survyr package
# load processed dataset
dt<-readRDS("Datasets/Processed data/Cleaned_datasetV1.RDS")
library(sf)
library(ggplot2)
library(ggspatial)
library(SUMMER)
# PULL MAP DATA AND ndhs DATA
map<-read_sf("Datasets/Raw data/hermes_NPL_new_wgs(1)/hermes_NPL_new_wgs_2.shp")
# PULL MAP DATA AND ndhs DATA
map<-read_sf("Datasets/Raw data/hermes_NPL_new_wgs(1)/hermes_NPL_new_wgs_2.shp")
nepal<-st_transform(map, crs="+proj=longlat +datum=WGS84 +no_defs")
# mdhs DATA
# load libraries
library(tidyverse)
library(gtsummary)
library(survey)
dt <- readRDS("Datasets/Processed data/Cleaned_datasetV1.RDS")
dt <-dt |> filter(Year==2022) |> droplevels()
# mdhs DATA
# load libraries
library(tidyverse)
library(gtsummary)
library(survey)
dt <- readRDS("Datasets/Processed data/Cleaned_datasetV1.RDS")
dt <-dt |> filter(Year==2022) |> droplevels()
dt$motheredu<-ifelse(dt$Mother_education2=="no education", 1, ifelse(dt$Mother_education2=="lower basic education (1-5)"|dt$Mother_education2=="upper basic education (6-8)", 2, ifelse(dt$Mother_education2=="lower secondary (9-10)"|dt$Mother_education2=="upper secondary (11-12)", 3, ifelse(dt$Mother_education2=="more than secondary (13+)", 3,  NA))))
dt$motheredu<-factor(dt$motheredu, levels = c(1:3), labels=c("No education", "basic ", "Secondary and Higher"))
dt$fatheredu<-ifelse(dt$v701=="no education", 1, ifelse(dt$v701=="basic", 2, ifelse(dt$v701=="secondary"|dt$v701=="higher", 3, NA)))
dt$fatheredu<-factor(dt$fatheredu, levels = c(1:3), labels=c("No education", "basic ", "Secondary and Higher"))
dt$Anemia<-factor(dt$Anemia, levels = c(0,1), labels=c("No", "Yes"))
# create survey design
svydt<-svydesign(ids = ~ids, weights = ~Sampling_wt, data=dt)
# load processed dataset
dt<-readRDS("Datasets/Processed data/Cleaned_datasetV1.RDS")
table(dt$Year)
# load libraries
library(tidyverse)
library(gtsummary)
library(survey)
dt <- readRDS("Datasets/Processed data/Cleaned_datasetV1.RDS")
dt <-dt |> filter(Year==2022) |> droplevels()
dt$motheredu<-ifelse(dt$Mother_education2=="no education", 1, ifelse(dt$Mother_education2=="lower basic education (1-5)"|dt$Mother_education2=="upper basic education (6-8)", 2, ifelse(dt$Mother_education2=="lower secondary (9-10)"|dt$Mother_education2=="upper secondary (11-12)", 3, ifelse(dt$Mother_education2=="more than secondary (13+)", 3,  NA))))
dt$motheredu<-factor(dt$motheredu, levels = c(1:3), labels=c("No education", "basic ", "Secondary and Higher"))
dt$fatheredu<-ifelse(dt$v701=="no education", 1, ifelse(dt$v701=="basic", 2, ifelse(dt$v701=="secondary"|dt$v701=="higher", 3, NA)))
dt$fatheredu<-factor(dt$fatheredu, levels = c(1:3), labels=c("No education", "basic ", "Secondary and Higher"))
dt$Anemia<-factor(dt$Anemia, levels = c(0,1), labels=c("No", "Yes"))
# create survey design
svydt<-svydesign(ids = ~ids, weights = ~Sampling_wt, data=dt)
svydt |>
tbl_svysummary(include = c("Province","Ecological_region","Place_of_residence", "Wealth_quintile","Mother_education", "husband_edu","parity", "maternal_nut", "housedecision",  "age2","Sex", "birth_wt"),
digits = all_categorical()~c(0,1))
#----------------- Install, load libraries and datasets -------------------
# Important documents
# to join datasets: https://dhsprogram.com/Data/Guide-to-DHS-Statistics/Analyzing_DHS_Data.htm
# to access dataset: https://www.dhsprogram.com/data/dataset/Nepal_Standard-DHS_2022.cfm?flag=0
# to access reports:
#  2016: https://www.dhsprogram.com/pubs/pdf/fr336/fr336.pdf
#  2011: https://dhsprogram.com/pubs/pdf/FR257/FR257[13April2012].pdf
#  2022: https://dhsprogram.com/pubs/pdf/FR379/FR379.pdf
# Clear environment
rm(list=ls())
# load packages and functions
source("Script/1_1_Functions.R")
# load datasets
# load PR data from 2011, 2016 and 2022
PRdata2022 <- read_dta("Datasets/Raw data/NP_2022_DHS_10282024_1914_183234/NPPR82DT/NPPR82FL.DTA")
PRdata2016 <- read_dta("Datasets/Raw data/NP_2016_DHS_10282024_1517_183234/NPPR7HDT/NPPR7HFL.DTA")
PRdata2011 <- read_dta("Datasets/Raw data/NP_2011_DHS_10282024_1518_183234/NPPR61DT/NPPR61FL.DTA")
# load KR data from 2011, 2016 and 2022
KRdata2022 <- read_dta("Datasets/Raw data/NP_2022_DHS_10282024_1914_183234/NPKR82DT/NPKR82FL.DTA")
KRdata2016 <- read_dta("Datasets/Raw data/NP_2016_DHS_10282024_1517_183234/NPKR7HDT/NPKR7HFL.DTA")
KRdata2011 <- read_dta("Datasets/Raw data/NP_2011_DHS_10282024_1518_183234/NPKR61DT/NPKR61FL.DTA")
# load IR data from 2011, 2016 and 2022
IRdata2022 <- read_dta("Datasets/Raw data/NP_2022_DHS_10282024_1914_183234/NPIR82DT/NPIR82FL.DTA")
IRdata2016 <- read_dta("Datasets/Raw data/NP_2016_DHS_10282024_1517_183234/NPIR7HDT/NPIR7HFL.DTA")
IRdata2011 <- read_dta("Datasets/Raw data/NP_2011_DHS_10282024_1518_183234/NPIR61DT/NPIR61FL.DTA")
# load br data from 2011, 2016 and 2022
BRdata2022 <- read_dta("Datasets/Raw data/NP_2022_DHS_10282024_1914_183234/NPBR82DT/NPBR82FL.DTA")
BRdata2016 <- read_dta("Datasets/Raw data/NP_2016_DHS_10282024_1517_183234/NPBR7HDT/NPBR7HFL.DTA")
BRdata2011 <- read_dta("Datasets/Raw data/NP_2011_DHS_10282024_1518_183234/NPBR61DT/NPBR61FL.DTA")
# remove unnecessary objects from environment
rm(list=c("new_packages"))
# load libraries
library(tidyverse)
library(gtsummary)
library(survey)
dt <- readRDS("Datasets/Processed data/Cleaned_datasetV1.RDS")
dt <-dt |> filter(Year==2022) |> droplevels()
dt$motheredu<-ifelse(dt$Mother_education2=="no education", 1, ifelse(dt$Mother_education2=="lower basic education (1-5)"|dt$Mother_education2=="upper basic education (6-8)", 2, ifelse(dt$Mother_education2=="lower secondary (9-10)"|dt$Mother_education2=="upper secondary (11-12)", 3, ifelse(dt$Mother_education2=="more than secondary (13+)", 3,  NA))))
dt$motheredu<-factor(dt$motheredu, levels = c(1:3), labels=c("No education", "basic ", "Secondary and Higher"))
dt$fatheredu<-ifelse(dt$v701=="no education", 1, ifelse(dt$v701=="basic", 2, ifelse(dt$v701=="secondary"|dt$v701=="higher", 3, NA)))
dt$fatheredu<-factor(dt$fatheredu, levels = c(1:3), labels=c("No education", "basic ", "Secondary and Higher"))
dt$Anemia<-factor(dt$Anemia, levels = c(0,1), labels=c("No", "Yes"))
# create survey design
svydt<-svydesign(ids = ~ids, weights = ~Sampling_wt, data=dt)
# load libraries
library(tidyverse)
library(gtsummary)
library(survey)
dt <- readRDS("Datasets/Processed data/Cleaned_datasetV1.RDS")
dt <-dt |> filter(Year==2022) |> droplevels()
dt$motheredu<-ifelse(dt$Mother_education2=="no education", 1, ifelse(dt$Mother_education2=="lower basic education (1-5)"|dt$Mother_education2=="upper basic education (6-8)", 2, ifelse(dt$Mother_education2=="lower secondary (9-10)"|dt$Mother_education2=="upper secondary (11-12)", 3, ifelse(dt$Mother_education2=="more than secondary (13+)", 3,  NA))))
dt$motheredu<-factor(dt$motheredu, levels = c(1:3), labels=c("No education", "basic ", "Secondary and Higher"))
dt$fatheredu<-ifelse(dt$v701=="no education", 1, ifelse(dt$v701=="basic", 2, ifelse(dt$v701=="secondary"|dt$v701=="higher", 3, NA)))
dt$fatheredu<-factor(dt$fatheredu, levels = c(1:3), labels=c("No education", "basic ", "Secondary and Higher"))
dt$Anemia<-factor(dt$Anemia, levels = c(0,1), labels=c("No", "Yes"))
# create survey design
svydt<-svydesign(ids = ~ids, weights = ~Sampling_wt, data=dt)
# load libraries
library(tidyverse)
library(gtsummary)
library(survey)
dt <- readRDS("Datasets/Processed data/Cleaned_datasetV1.RDS")
dt <-dt |> filter(Year==2022) |> droplevels()
dt$motheredu<-ifelse(dt$Mother_education2=="no education", 1, ifelse(dt$Mother_education2=="lower basic education (1-5)"|dt$Mother_education2=="upper basic education (6-8)", 2, ifelse(dt$Mother_education2=="lower secondary (9-10)"|dt$Mother_education2=="upper secondary (11-12)", 3, ifelse(dt$Mother_education2=="more than secondary (13+)", 3,  NA))))
dt$motheredu<-factor(dt$motheredu, levels = c(1:3), labels=c("No education", "basic ", "Secondary and Higher"))
dt$fatheredu<-ifelse(dt$v701=="no education", 1, ifelse(dt$v701=="basic", 2, ifelse(dt$v701=="secondary"|dt$v701=="higher", 3, NA)))
dt$fatheredu<-factor(dt$fatheredu, levels = c(1:3), labels=c("No education", "basic ", "Secondary and Higher"))
dt$Anemia<-factor(dt$Anemia, levels = c(0,1), labels=c("No", "Yes"))
# create survey design
svydt<-svydesign(ids = ~ids, weights = ~Sampling_wt, data=dt)
svydt |>
tbl_svysummary(include = c("Province","Ecological_region","Place_of_residence", "Wealth_quintile","Mother_education", "husband_edu","parity", "maternal_nut", "housedecision",  "age2","Sex", "birth_wt"),
digits = all_categorical()~c(0,1)) |>
as_hux_xlsx("Table 1 characterstics of survey participatns.xlsx")
